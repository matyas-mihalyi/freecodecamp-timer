{"version":3,"sources":["hooks/TimeSetHook.ts","components/TimerSetup.tsx","components/TimerControl.tsx","App.tsx","hooks/TimerStateHook.ts","index.tsx"],"names":["ONE_SECOND","ONE_MINUTE","formatTime","time","timeInSeconds","minutes","Math","floor","seconds","formattedMinutes","formattedSeconds","TimerSetup","props","data","sessionTime","breakTime","incrementTimeSet","decrementTimeSet","type","timerIsRunning","timeSet","ids","increment","decrement","label","length","className","id","formattedTime","onClick","TimerControl","timerStarted","timerStopped","resetTimeSet","useState","timer","setTimer","displayedTime","setDisplayedTime","timerLabel","setTimerLabel","sessionTimeLeft","useRef","breakTimeLeft","resetTimer","clearInterval","current","audioElement","pause","currentTime","stopAudio","useEffect","playAudio","play","setInterval","ref","src","App","setBreakTime","setSessionTime","period","useTimeSet","setTimerIsRunning","useTimerState","timerSetupProps","timerControlProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe90e3dc.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { PeriodTypes } from \"../App\";\r\n\r\nexport const ONE_SECOND = 1000;\r\nexport const ONE_MINUTE = 60000;\r\n\r\n\r\nexport function formatTime(time: number): string {\r\n  const timeInSeconds = time / ONE_SECOND;\r\n  let minutes:number = Math.floor(timeInSeconds / 60);\r\n  let seconds:number = timeInSeconds % 60;\r\n\r\n  let formattedMinutes:string = `${minutes}`\r\n  let formattedSeconds:string = `${seconds}`\r\n  \r\n  if (seconds < 10) {\r\n    formattedSeconds = `0${seconds}`\r\n  }\r\n  if (minutes < 10) {\r\n    formattedMinutes = `0${minutes}`\r\n  }\r\n\r\n  return `${formattedMinutes}:${formattedSeconds}`;\r\n}\r\n\r\n\r\n\r\nexport const useTimeSet = () => {\r\n  const [breakTime, setBreakTime] = useState<number>(5 * ONE_MINUTE);\r\n  const [sessionTime, setSessionTime] = useState<number>(25 * ONE_MINUTE);\r\n  \r\n  function incrementTimeSet (timeSet:number, period:PeriodTypes):void {\r\n    if (timeSet < 60 * ONE_MINUTE) {\r\n      switch (period) {\r\n        case \"session\":\r\n          setSessionTime(sessionTime + ONE_MINUTE);\r\n          break;\r\n        case \"break\":\r\n          setBreakTime(breakTime + ONE_MINUTE);\r\n      };\r\n    };\r\n  };\r\n      \r\n  function decrementTimeSet (timeSet:number, period:PeriodTypes):void {\r\n    if (timeSet > ONE_MINUTE) {\r\n      switch (period) {\r\n        case \"session\":\r\n          setSessionTime(sessionTime - ONE_MINUTE);\r\n          break;\r\n          case \"break\":\r\n            setBreakTime(breakTime - ONE_MINUTE);\r\n          };\r\n        };\r\n      };\r\n      \r\n  function resetTimeSet () {\r\n    setSessionTime(25 * ONE_MINUTE);\r\n    setBreakTime(5 * ONE_MINUTE);\r\n  }\r\n\r\n\r\n  return { sessionTime, breakTime, incrementTimeSet, decrementTimeSet, resetTimeSet }\r\n\r\n}","import { PeriodTypes } from '../App';\r\nimport {ONE_SECOND, ONE_MINUTE} from '../hooks/TimeSetHook'\r\n\r\ntype TimerSetupData = {\r\n  sessionTime:number,\r\n  breakTime:number,\r\n  incrementTimeSet:(timeSet:number, type:PeriodTypes)=> void,\r\n  decrementTimeSet:(timeSet:number, type:PeriodTypes)=> void,\r\n  timerIsRunning:boolean,\r\n}\r\n\r\ntype TimerSetupProps = {\r\n  data: TimerSetupData,\r\n  type: PeriodTypes\r\n}\r\n\r\n\r\nexport const TimerSetup = (props:TimerSetupProps) => {\r\n\r\n  const {sessionTime, breakTime, incrementTimeSet, decrementTimeSet, timerIsRunning } = props.data;\r\n  const type = props.type;\r\n\r\n  const timeSet = ():number => {\r\n    switch (type) {\r\n      case \"session\":\r\n        return sessionTime;\r\n      case \"break\":\r\n        return breakTime;\r\n    };\r\n  };\r\n\r\n  const formattedTime = ():number => {\r\n    switch (type) {\r\n      case \"session\":\r\n        return sessionTime / ONE_MINUTE;\r\n      case \"break\":\r\n        return breakTime / ONE_MINUTE;\r\n    };\r\n  };\r\n  \r\n  type IdTypes = \"increment\"|\"decrement\"|\"label\"|\"length\";\r\n\r\n  type ElementIds = {\r\n    [propNames in IdTypes]: string;\r\n  };\r\n\r\n  const ids:ElementIds = {\r\n    increment: `${type}-increment`,\r\n    decrement: `${type}-decrement`,\r\n    label: `${type}-label`,\r\n    length: `${type}-length`\r\n  };\r\n  \r\n  \r\n  return (\r\n    <div className=\"setup-wrapper col-md-4 col-xs-12 py-3 d-flex justify-content-center flex-wrap gap-1\">\r\n      <h3 id={ids.label} className=\"period-title text-center\">{type} Length</h3>\r\n      <span id={ids.length}>{formattedTime()}</span>\r\n      <button id={ids.increment} onClick={()=> incrementTimeSet(timeSet(), type)} type=\"button\" className=\"btn btn-sm btn-secondary\"><i className=\"ri-arrow-up-s-line\"></i></button>\r\n      <button id={ids.decrement} onClick={()=> decrementTimeSet(timeSet(), type)} type=\"button\" className=\"btn btn-sm  btn-secondary\"><i className=\"ri-arrow-down-s-line\"></i></button>\r\n    </div>\r\n  );\r\n}","import { formatTime, ONE_SECOND } from '../hooks/TimeSetHook';\r\nimport { useState, useRef, useEffect } from 'react'\r\n\r\ntype TimerData = {\r\n  timerIsRunning:boolean,\r\n  timerStarted:()=>void,\r\n  timerStopped:()=>void,\r\n  breakTime:number,\r\n  sessionTime:number,\r\n  resetTimeSet:()=>void\r\n};\r\n\r\ntype TimerProps = {\r\n  data:TimerData\r\n};\r\n\r\n\r\nexport const TimerControl = (props:TimerProps) => {\r\n\r\n  const { timerIsRunning, timerStarted, timerStopped, sessionTime, breakTime, resetTimeSet } = props.data;\r\n\r\n  const [timer, setTimer] = useState<null | ReturnType<typeof setInterval>>(null);\r\n  const [displayedTime, setDisplayedTime] = useState<string>(formatTime(sessionTime));\r\n  const [timerLabel, setTimerLabel] = useState<\"Session\"|\"Break\">(\"Session\");\r\n  const sessionTimeLeft = useRef<number>(sessionTime);\r\n  const breakTimeLeft = useRef<number>(breakTime);\r\n\r\n  useEffect(() => {\r\n    sessionTimeLeft.current = sessionTime;\r\n    breakTimeLeft.current = breakTime;\r\n    setDisplayedTime(formatTime(sessionTime));\r\n  }, [sessionTime, breakTime]);\r\n\r\n\r\n  function startTimer (): void {\r\n    if (timerIsRunning && timer !== null) {\r\n\r\n      timerStopped();\r\n\r\n      clearInterval(timer);\r\n\r\n    } else if (!timerIsRunning) {\r\n\r\n      timerStarted();\r\n      \r\n      setTimer ( setInterval(()=> {\r\n\r\n        //start with sessiontime reset if both session and break time is expired\r\n        if (sessionTimeLeft.current === 0 && breakTimeLeft.current < 0) {\r\n          sessionTimeLeft.current = sessionTime;\r\n          breakTimeLeft.current = breakTime;\r\n          setDisplayedTime(formatTime(sessionTimeLeft.current));\r\n          setTimerLabel(\"Session\");\r\n          playAudio();\r\n        } else\r\n        //when session time is expired start break time\r\n        if(sessionTimeLeft.current === 0) {\r\n          audioElement.current?.play();\r\n          setDisplayedTime(formatTime(breakTimeLeft.current));\r\n          breakTimeLeft.current = breakTimeLeft.current - ONE_SECOND;\r\n          setTimerLabel(\"Break\");\r\n          playAudio();\r\n        } else\r\n        \r\n        //start with sessiontime\r\n        if (sessionTimeLeft.current > 0) {\r\n          sessionTimeLeft.current = sessionTimeLeft.current - ONE_SECOND;\r\n          setDisplayedTime(formatTime(sessionTimeLeft.current));\r\n        };\r\n        \r\n      }, 1000));\r\n\r\n    }\r\n  };\r\n\r\n  \r\n  function resetTimer (): void {\r\n    timerStopped();\r\n    if (timer !== null) {\r\n      clearInterval(timer);\r\n    };\r\n    resetTimeSet();\r\n    sessionTimeLeft.current = sessionTime;\r\n    breakTimeLeft.current = breakTime;\r\n    setDisplayedTime(formatTime(sessionTimeLeft.current));\r\n    setTimerLabel(\"Session\");\r\n    stopAudio();\r\n  };\r\n  \r\n  const audioElement = useRef<HTMLAudioElement>(null);\r\n  function playAudio () {\r\n    audioElement.current?.play();\r\n  };\r\n  \r\n  function stopAudio () {\r\n    audioElement.current?.pause();\r\n    audioElement.current!.currentTime = 0;\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"timer-control col-md-4 col-xs-12 d-flex gap-2 justify-content-center flex-wrap py-3\">\r\n      <h2 id=\"timer-label\" className=\"text-center\">{timerLabel}</h2>\r\n      <span id=\"time-left\" className=\"text-center\">{displayedTime}</span>\r\n      <button id=\"start_stop\" className=\"btn btn-primary\" onClick={()=> startTimer()}><i className=\"ri-play-fill\"></i></button>\r\n      <button id=\"reset\" className=\"btn btn-secondary\" onClick={()=> resetTimer()}><i className=\"ri-refresh-line\"></i></button>\r\n      <audio id=\"beep\" ref={audioElement} src=\"https://soundbible.com/mp3/Fire_pager-jason-1283464858.mp3\" />\r\n    </div>\r\n  );\r\n\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { TimerSetup } from './components/TimerSetup';\r\nimport { TimerControl } from './components/TimerControl';\r\nimport { useTimerState } from './hooks/TimerStateHook';\r\nimport {useTimeSet} from './hooks/TimeSetHook';\r\n\r\nexport type PeriodTypes = \"break\" | \"session\";\r\n\r\nfunction App() {\r\n\r\n  const { sessionTime, breakTime, incrementTimeSet, decrementTimeSet,  resetTimeSet } = useTimeSet();\r\n  const { timerIsRunning, timerStarted, timerStopped } = useTimerState();\r\n\r\n  const timerSetupProps = {sessionTime, breakTime, incrementTimeSet, decrementTimeSet, timerIsRunning };\r\n\r\n  const timerControlProps = { timerIsRunning, timerStarted, timerStopped, sessionTime, breakTime, resetTimeSet };\r\n\r\n  return (\r\n    <div className=\"App row d-flex flex-column min-vh-100 justify-content-center align-items-center gap-1\">\r\n      <TimerControl data={timerControlProps}/>\r\n      <TimerSetup type=\"session\" data={timerSetupProps}/>\r\n      <TimerSetup type=\"break\" data={timerSetupProps}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState } from \"react\";\r\n\r\nexport const useTimerState = () => {\r\n\r\n  const [timerIsRunning, setTimerIsRunning] = useState<boolean>(false);\r\n\r\n  function timerStarted () {\r\n    setTimerIsRunning(true);\r\n  };\r\n\r\n  function timerStopped () {\r\n    setTimerIsRunning(false);\r\n  };\r\n\r\n  return { timerIsRunning, timerStarted, timerStopped }\r\n\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}